/* Always use this below universal selector 
to do global reset */
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
*:focus {
  outline: none;

  /* outline: 4px dotted #e67e22
  outline-offset : 8px
  */

  box-shadow: 0 0 0 0.8rem rgba(230, 125, 34, 0.5);
}

body {
  font-family: "Rubik", sans-serif;
  line-height: 1;
  font-weight: 400;
  color: #555;
}

html {
  font-size: 62.5%;
}

.section-featured {
  padding: 4.8rem 0 3.2rem 0;
}
.section-meals {
  padding: 9.6rem 0;
}

.section-pricing {
  padding: 9.6rem 0;
}

.section-cta {
  padding: 9.6rem 0;
}

.section-testimonials {
  background-color: #fdf2e9;
  display: grid;
  grid-template-columns: 55fr 45fr;
  align-items: center;
}
.testimonials-container {
  padding: 9.6rem;
}
.hero-section {
  background-color: #fdf2e9;
  padding: 4.8rem 0 9.6rem 0;
}
.hero {
  max-width: 130rem;
  margin: 0 auto;
  padding: 0 3.2rem;
  display: grid;
  gap: 9.6rem;
  grid-template-columns: 1fr 1fr;
  align-items: center;
}
.hero-img {
  width: 100%;
}

.logos {
  display: flex;
  /* align-items: center; */
  justify-content: space-around;
}

.logos img {
  height: 3.2rem;
  /* filter: grayscale(100%); 
  This will make everything black. But within the image there will be gray and black shades. We want everything to be gray for out requirement.*/

  filter: brightness(0);
  /* This will make the complete picture black, with no shades.*/

  opacity: 50%;
  /*
  to make the image gray. Which will be black before this transformation.
  */
}

.meal-img {
  width: 100%;
}

.meal-title {
  font-size: 2rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 3.2rem;
}
.meal-tags {
  margin-bottom: 1.2rem;
  display: flex;
  gap: 0.4rem;
}

.meal-content {
  padding: 3.2rem 4.8rem 4.8rem 4.8rem;
}
.meal {
  box-shadow: 0 2.4rem 4.8rem rgb(0, 0, 0, 0.075);
  /*         Horizontal-shadow Vertical-shadow Blur Color */
  border-radius: 11px;
  overflow: hidden;
  /* this will make sure that image which is overflowing will be hidden. Other wise the rounded corners will be hidden behind the image*/

  transition: all 0.4s;
}

.meal:hover {
  transform: translateY(-1.2rem);
  box-shadow: 0 3.2rem 6.4rem rgb(0, 0, 0, 0.06);
}
.tag {
  display: inline-block;
  padding: 0.4rem 0.8rem;
  font-size: 1.2rem;
  text-transform: uppercase;
  color: #555;
  border-radius: 100px;
  font-weight: 600;
}

.tag--Vegetarian {
  background-color: #51cf66;
}

.tag--Vegetarian {
  background-color: #51cf66;
}

.tag--Vegan {
  background-color: #94d82d;
}

.tag--Paleo {
  background-color: #ffd43b;
}
.meal-attributes {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.meal-attribute {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.meal-icon {
  height: 2.4rem;
  width: 2.4rem;
  /* Can use font-size also, instead of height and width */
  color: #e67e22;
}

.list {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
}
.list-item {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}
.list-icon {
  width: 3rem;
  height: 3rem;
  color: #e67e22;
}

.all-recipes {
  text-align: center;
  font-size: 1.8rem;
}

.testimonials {
  display: grid;
  grid-template-columns: 1fr 1fr;
  row-gap: 4.8rem;
  column-gap: 8rem;
}

.testimonial-img {
  width: 6.4rem;
  border-radius: 50%;
}

.testimonial-text {
  font-size: 1.8rem;
  line-height: 1.8;
  margin-bottom: 1.6rem;
}
.testimonial-name {
  font-size: 1.6rem;
  color: #6f6f6f;
}
.pricing-plan {
  border-radius: 11px;

  width: 75%; /* 75 percent of the available width*/
}

.pricing-plan--starter {
  justify-self: end;
  border: 2px solid #fdf2e9;
  padding: 4.6rem;
}
.pricing-plan--complete {
  background-color: #fdf2e9;
  padding: 4.8rem;
  position: relative;
  overflow: hidden;
}

.pricing-plan--complete::after {
  content: "Best value";
  position: absolute;
  top: 6%;
  right: -18%;
  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: 700;
  color: #333;
  background-color: #ffd43b;
  padding: 0.8rem 8rem;
  transform: rotate(45deg);
}
.plan-header {
  text-align: center;
  margin-bottom: 4.8rem;
}

.plan-name {
  color: #cf711f;
  font-weight: 600;
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 0.75;
  margin-bottom: 3.2rem;
}

.plan-price {
  font-size: 6.2rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 1.6rem;
}
.plan-price span {
  font-size: 3rem;
  font-weight: 500;
  margin-right: 0.8rem;
}

.plan-text {
  font-size: 1.6rem;
  line-height: 1.6rem;
  color: #6f6f6f;
}

.plan-sign-up {
  text-align: center;
  margin-top: 4.8rem;
}

.plan-details {
  font-size: 1.6rem;
  line-height: 1.6;
  text-align: center;
}

.feature-icon {
  color: #e67e22;
  height: 3.2rem;
  width: 3.2rem;
  margin-bottom: 1.6rem;
  background-color: #fdf2e9;
  padding: 1.6rem;
  border-radius: 50%;
}

.feature-title {
  font-size: 2.4rem;
  color: #333;
  font-weight: 700;
  margin-bottom: 1.6rem;
}

.feature-text {
  font-size: 1.8rem;
  line-height: 1.8;
}

.cta {
  display: grid;
  grid-template-columns: 2fr 1fr;
  /* background-color: #e67e22; */
  box-shadow: 0 2.4rem 4.8rem rgb(0, 0, 0, 0.15);
  border-radius: 11px;
  /* background-image: linear-gradient(90 deg, red, #e67e22); */
  /*                                 to make it vertical,  start color,  end color*/
  /* background-image: linear-gradient(to right, red, #e67e22);
  background-image: linear-gradient(to left, red, #e67e22); */
  background-image: linear-gradient(to right bottom, #eb984e, #e67e22);

  /* height: 50rem; */
  overflow: hidden;
}

.cta-text-box {
  padding: 4.8rem 6.4rem 6.4rem 6.4rem; /*Top Right Bottom Left*/
  color: #45260a;
}

.cta-text {
  font-size: 1.8rem;
  line-height: 1.8;
}

.cta .heading-secondary {
  color: #45260a;
  margin-bottom: 3.2rem;
}

.cta-img-box {
  background-image: linear-gradient(
      to right bottom,
      rgba(235, 151, 78, 0.35),
      rgba(230, 125, 34, 0.35)
    ),
    url("../img/eating.jpg");
  background-size: cover;
  /* to make sure that no matter what the size 
  of the container the image will always cover it 
  entirely. */
  background-position: center; /*  can be useful if the image size is bigger than the container*/
}

.cta-form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 3.2rem;
  row-gap: 2.4rem;
}

.cta-form label {
  display: block;
  font-size: 1.6rem;
  font-weight: 500;
  margin-bottom: 1.2rem;
}

.cta-form input,
.cta-form select {
  width: 100%;
  padding: 1.2rem;
  font-size: 1.8rem;
  /* by default it doesn't inherit font-family from body,
  but we can force it to inherit */
  font-family: inherit;

  /* inherit keyword can be used for other CSS properties as
  well, like 'color' */
  color: inherit;

  border: none;
  background-color: #fdf2e9;
  border-radius: 9px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.cta-form input::placeholder {
  color: #aaa;
}

.cta-form *:focus {
  outline: none;
  box-shadow: 0 0 0 0.8rem rgba(235, 242, 233, 0.5);
}

.heading-primary,
.heading-secondary,
.heading-tertiary {
  font-weight: 700;
  color: #333;
  letter-spacing: -0.5px;
}

.heading-primary {
  font-size: 5.2rem;
  line-height: 1.05;
  margin-bottom: 3.2rem;
}

.heading-secondary {
  font-size: 4.4rem;
  line-height: 1.2;
  margin-bottom: 9.6rem;
}

.heading-tertiary {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 3.2rem;
}

.heading-featured-in {
  font-size: 1.4rem;
  letter-spacing: 0.75px;
  text-transform: uppercase;
  font-weight: 500;
  text-align: center;
  margin-bottom: 2.4rem;
  color: #888;
}

.subheading {
  display: block; /* because span element is inline where the CSS grid model doesn't work properly*/
  font-size: 1.6rem;
  font-weight: 500;
  color: #cf711f;
  text-transform: uppercase;
  margin-bottom: 1.6rem;
  letter-spacing: 0.75px;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.btn,
.btn:link,
.btn:visited {
  font-size: 2rem;
  padding: 1.6rem 3.2rem;
  text-decoration: none;
  display: inline-block;
  border-radius: 9px;
  font-weight: 600;
  border: none;
  cursor: pointer;
  font-family: inherit;

  /* now when state is changed, it 
  will be occur slowly. 
  
  Always do it in the original state element
  */
  transition: all 0.3s;
}

.btn--form {
  background-color: #45260a;
  color: #fdf2e9;
  align-self: end;
  padding: 1.2rem;
}

.btn--form:hover {
  background-color: #fff;
  color: #555;
}

.btn--full:link,
.btn--full:visited {
  background-color: #e67e22;
  color: #fff;
}

.btn--full:hover,
.btn--full:active {
  background-color: #cf711f;
  color: #fff;
}

.btn--outline:link,
.btn--outline:visited {
  background-color: #fff;
  color: #555;
}

.btn--outline:hover,
.btn--outline:active {
  background-color: #fdf2e9;
  color: #555;
  /*border: 3px solid #fff;*/

  box-shadow: inset 0 0 0 3px #fff;
}

/*Below classes can be called helper setting classes*/
.margin-right-sm {
  margin-right: 1.6rem !important;
}

.margin-bottom-md {
  margin-bottom: 4.8rem !important;
}

.center-text {
  text-align: center;
}

/*Above classes can be called helper setting classes*/

.delivered-meals {
  display: flex;
  margin-top: 8rem;
  align-items: center;
  gap: 1.6rem;
}

.display-imgs {
  display: flex;
}

/* descendant selector*/
.delivered-imgs img {
  height: 4rem;
  width: 4rem;
  border-radius: 50%;
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}

.delivered-imgs img:last-child {
  margin-right: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-text span {
  color: #cf711f;
  font-weight: 700;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #fdf2e9;

  /* generally its not required, as it will
  take the height of the children
  
  But we want to make this header fixed. So, it will be helpful in that
  */
  height: 9.6rem;
  padding: 0 4.8rem;
}

.logo {
  height: 2.2rem;
}

.main-nav-list {
  list-style: none;
  display: flex;
  gap: 3.2rem;

  align-items: center;
}

.main-nav-link:link,
.main-nav-link:visited {
  /* always make text decoartion as none for links/anchor tags*/
  text-decoration: none;
  color: #333;
  font-weight: 500;
  font-size: 1.8rem;
  transition: all 0.3s;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #cf711f;
}

.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  /* adding the parent class name in the selector will
  increase the specificity of the CSS style. Hence it will 
  be applied on a greater priority*/

  padding: 1.6rem 3.2rem;
  border-radius: 9px;
  color: #fff;
  background-color: #e67e22;
}

.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active {
  background-color: #cf711f;
}

.link:link,
.link:visited {
  display: inline-block;
  color: #e67e22;
  text-decoration: none;
  border-bottom: 1px solid currentColor; /* currentColor will gice the border color of the font color */
  padding-bottom: 2px;
  transition: all 0.3s;
}

.link:hover,
.link:active {
  color: #cf711f;
  border-bottom: 1px solid transparent;
  /* instead of removing the border when hovering, make border transparent.
  Otherwise the layout will be affected, when border is removed*/
}

.section-how {
  padding: 9.6rem 0;
}

.step-img {
  width: 35%;
}

.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}

.step-img-box {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.step-img-box::before,
.step-img-box::after {
  content: "";
  display: block;
  position: absolute; /* always make the parent element position as relative when using absolute position*/
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

.step-img-box::before {
  width: 60%;
  /* height: 60%;  this will not work, so we will add padding bottom to make this element a square*/
  padding-bottom: 60%; /* 60 percent of the parent's width*/
  background-color: #fdf2e9;

  z-index: -2;
}

.step-img-box::after {
  width: 45%;
  /* height: 60%;  this will not work, so we will add padding bottom to make this element a square*/
  padding-bottom: 45%; /* 60 percent of the parent's width*/
  background-color: #fae5d3;

  z-index: -1;
}

.step-number {
  font-size: 8.6rem;
  font-weight: 600;
  color: #ddd;
  margin-bottom: 1.2rem;
}
.gallery-item {
  overflow: hidden;
}
.gallery-item img {
  display: block;
  /* Since image are by default inline elements, so there is always a small white space around them. We can remove these by using disply type block*/
  width: 100%;
  transition: all 0.4s;
}

.gallery-item img:hover {
  transform: scale(1.1);
}

.gallery {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.6rem;
  padding: 1.6rem;
}

/* Reusable code
all below CSS styles and classes are reusable.
*/
.container {
  /* except for the hero section 
  all the subsequent sections can use thos container
  as the parent */
  max-width: 120rem;
  padding: 0 3.2rem;
  margin: 0 auto; /* to center the container*/
}

/*reusable grids*/
.grid {
  display: grid;
  row-gap: 9.6rem;
  column-gap: 6.4rem;
}

.grid:last-child {
  margin-bottom: 0;
}

.grid:not(:last-child) {
  margin-bottom: 9.6rem;
}

.grid--2-cols {
  grid-template-columns: repeat(2, 1fr); /* 1fr 1fr*/
}

.grid--3-cols {
  grid-template-columns: repeat(3, 1fr); /* 1fr 1fr 1fr*/
}

.grid--4-cols {
  grid-template-columns: repeat(4, 1fr); /* 1fr 1fr 1fr 1fr*/
}

.grid--center-v {
  align-items: center;
}

strong {
  font-weight: 500;
}
